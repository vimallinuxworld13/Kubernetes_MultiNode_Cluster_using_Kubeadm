

https://github.com/cri-o/packaging/blob/main/README.md#usage


KUBERNETES_VERSION=v1.32
CRIO_VERSION=v1.32


cat <<EOF | tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/rpm/repodata/repomd.xml.key
EOF


cat <<EOF | tee /etc/yum.repos.d/cri-o.repo
[cri-o]
name=CRI-O
baseurl=https://pkgs.k8s.io/addons:/cri-o:/stable:/$CRIO_VERSION/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/addons:/cri-o:/stable:/$CRIO_VERSION/rpm/repodata/repomd.xml.key
EOF


dnf install -y container-selinux


dnf install -y cri-o

mv /etc/cni/net.d/10-crio-bridge.conflist.disabled /etc/cni/net.d/10-crio-bridge.conflist

systemctl start crio.service

systemctl enable   crio.service




swapoff -a
modprobe br_netfilter
sysctl -w net.ipv4.ip_forward=1



sudo setenforce 0
sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config


yum install -y kubelet kubeadm kubectl --disableexcludes=Kubernetes

systemctl enable --now kubelet


yum install -y iproute-tc


modprobe overlay

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF



cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF


kubeadm init --pod-network-cidr=10.1.0.0/16



user of k8s:
------------
 mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config



worker node:
------------
kubeadm join 192.168.7.178:6443 --token iw5uvb.puqfjaot62xlsd1r \
        --discovery-token-ca-cert-hash sha256:398adb1fc375ee6e2a8e79074eb4259a191cc53d3a1e479227657f719ecca911




